import type { Document } from 'bson';
import type { Collection } from '../../collection';
import type { Server } from '../../sdam/server';
import type { ClientSession } from '../../sessions';
import { AbstractOperation } from '../operation';
/**
 * @public
 */
export interface SearchIndexDescription {
    /** The name of the index. */
    name?: string;
    /** The index definition. */
    definition: Document;
}
/** @internal */
export declare class CreateSearchIndexesOperation extends AbstractOperation<string[]> {
    private readonly collection;
    private readonly descriptions;
    constructor(collection: Collection, descriptions: ReadonlyArray<SearchIndexDescription>);
    execute(server: Server, session: ClientSession | undefined): Promise<string[]>;
}
//# sourceMappingURL=create.d.ts.map